-- V5__Refactor_book_pricing_to_3NF.sql
--
-- Flyway migration script to refactor the database schema to 3rd Normal Form (3NF)
-- by separating pricing information and introducing a 'product' entity.
-- This migration ensures that each book can have different pricing types
-- (regular, promotional, discounted) and moves the specific price value
-- to the 'product' table, which links a book to a price category.

-- 1. Create price_category table if it does not exist
-- This table defines different categories of prices (e.g., Regular, Promotional, Discounted).
CREATE TABLE IF NOT EXISTS price_category
(
    id          BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    name        VARCHAR(50) UNIQUE                      NOT NULL,
    description VARCHAR(255),
    CONSTRAINT pk_price_category PRIMARY KEY (id)
);

-- 2. Insert default price categories if they do not already exist
-- These categories are essential for classifying product prices.
INSERT INTO price_category (name, description)
SELECT 'Regular', 'Standard retail price'
WHERE NOT EXISTS (SELECT 1 FROM price_category WHERE name = 'Regular');

INSERT INTO price_category (name, description)
SELECT 'Promotional', 'Special offer or temporary discount price'
WHERE NOT EXISTS (SELECT 1 FROM price_category WHERE name = 'Promotional');

INSERT INTO price_category (name, description)
SELECT 'Discounted', 'Permanent discounted price, e.g., for bulk or old stock'
WHERE NOT EXISTS (SELECT 1 FROM price_category WHERE name = 'Discounted');


-- 3. Rename the existing 'book' table to 'old_book' for data migration
-- This step is necessary to create a new 'book' table without the 'price' column.
-- First, drop any existing index on 'isbn10' from the old table to avoid conflicts
-- during the rename or subsequent creation of the new 'book' table.
DROP INDEX IF EXISTS idx_book_isbn10 ON book;
ALTER TABLE book RENAME TO old_book;

-- 4. Create the new 'book' table without the 'price' column
-- This table now strictly holds core descriptive information about books.
CREATE TABLE IF NOT EXISTS book
(
    id          BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    title       VARCHAR(255),
    description VARCHAR(255),
    isbn10      VARCHAR(255),
    CONSTRAINT pk_book PRIMARY KEY (id)
);

-- 5. Create the 'product' table
-- This table represents a distinct sellable item, linking a specific book
-- to a price category and its associated price. This allows for a single book
-- to be offered with multiple pricing strategies (e.g., a Regular product,
-- a Promotional product, etc.).
CREATE TABLE IF NOT EXISTS product
(
    id                BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    book_id           BIGINT                                  NOT NULL,
    price_category_id BIGINT                                  NOT NULL,
    current_price     DOUBLE PRECISION                        NOT NULL,
    CONSTRAINT pk_product PRIMARY KEY (id),
    CONSTRAINT fk_product_book FOREIGN KEY (book_id) REFERENCES book (id),
    CONSTRAINT fk_product_price_category FOREIGN KEY (price_category_id) REFERENCES price_category (id)
);

-- 6. Migrate data from 'old_book' to the new 'book' table
-- Transferring core book details to the refactored 'book' table.
INSERT INTO book (id, title, description, isbn10)
SELECT id, title, description, isbn10 FROM old_book;

-- 7. Migrate existing prices from 'old_book' to the 'product' table
-- For all existing books, we assume their original price was a 'Regular' price
-- and create corresponding entries in the new 'product' table.
INSERT INTO product (book_id, price_category_id, current_price)
SELECT
    ob.id,
    (SELECT id FROM price_category WHERE name = 'Regular'),
    ob.price
FROM old_book ob;

-- 8. Drop the old 'book' table
-- Once all relevant data has been migrated, the temporary 'old_book' table
-- can be safely removed.
DROP TABLE old_book;

-- 9. Re-add the unique index on 'isbn10' for the new 'book' table
-- This index is vital for efficient lookups and maintaining uniqueness for ISBNs.
CREATE UNIQUE INDEX IF NOT EXISTS idx_book_isbn10 ON book (isbn10);
